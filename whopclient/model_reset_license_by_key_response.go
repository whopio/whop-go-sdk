/*
Whop API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.10
Contact: support@whop.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package whopclient

import (
	"encoding/json"
)

// ResetLicenseByKeyResponse struct for ResetLicenseByKeyResponse
type ResetLicenseByKeyResponse struct {
	Success NullableBool `json:"success,omitempty"`
}

// NewResetLicenseByKeyResponse instantiates a new ResetLicenseByKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResetLicenseByKeyResponse() *ResetLicenseByKeyResponse {
	this := ResetLicenseByKeyResponse{}
	return &this
}

// NewResetLicenseByKeyResponseWithDefaults instantiates a new ResetLicenseByKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResetLicenseByKeyResponseWithDefaults() *ResetLicenseByKeyResponse {
	this := ResetLicenseByKeyResponse{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResetLicenseByKeyResponse) GetSuccess() bool {
	if o == nil || o.Success.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Success.Get()
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResetLicenseByKeyResponse) GetSuccessOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Success.Get(), o.Success.IsSet()
}

// HasSuccess returns a boolean if a field has been set.
func (o *ResetLicenseByKeyResponse) HasSuccess() bool {
	if o != nil && o.Success.IsSet() {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given NullableBool and assigns it to the Success field.
func (o *ResetLicenseByKeyResponse) SetSuccess(v bool) {
	o.Success.Set(&v)
}
// SetSuccessNil sets the value for Success to be an explicit nil
func (o *ResetLicenseByKeyResponse) SetSuccessNil() {
	o.Success.Set(nil)
}

// UnsetSuccess ensures that no value is present for Success, not even an explicit nil
func (o *ResetLicenseByKeyResponse) UnsetSuccess() {
	o.Success.Unset()
}

func (o ResetLicenseByKeyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Success.IsSet() {
		toSerialize["success"] = o.Success.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableResetLicenseByKeyResponse struct {
	value *ResetLicenseByKeyResponse
	isSet bool
}

func (v NullableResetLicenseByKeyResponse) Get() *ResetLicenseByKeyResponse {
	return v.value
}

func (v *NullableResetLicenseByKeyResponse) Set(val *ResetLicenseByKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableResetLicenseByKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableResetLicenseByKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResetLicenseByKeyResponse(val *ResetLicenseByKeyResponse) *NullableResetLicenseByKeyResponse {
	return &NullableResetLicenseByKeyResponse{value: val, isSet: true}
}

func (v NullableResetLicenseByKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResetLicenseByKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


