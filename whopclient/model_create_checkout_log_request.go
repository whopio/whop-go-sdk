/*
Whop API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.10
Contact: support@whop.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package whopclient

import (
	"encoding/json"
)

// CreateCheckoutLogRequest struct for CreateCheckoutLogRequest
type CreateCheckoutLogRequest struct {
	// The license key.
	Key *string `json:"key,omitempty"`
	// The name of the product.
	ProductName *string `json:"product_name,omitempty"`
	// The website associated with the product.
	Website *string `json:"website,omitempty"`
	// The size of the product.
	Size *int64 `json:"size,omitempty"`
	// An image URL of the product
	ImageUrl *string `json:"image_url,omitempty"`
	// The price of the product.
	Price *float32 `json:"price,omitempty"`
	// The status of the checkout log. Can be: success or denied.
	Status *string `json:"status,omitempty"`
}

// NewCreateCheckoutLogRequest instantiates a new CreateCheckoutLogRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCheckoutLogRequest() *CreateCheckoutLogRequest {
	this := CreateCheckoutLogRequest{}
	return &this
}

// NewCreateCheckoutLogRequestWithDefaults instantiates a new CreateCheckoutLogRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCheckoutLogRequestWithDefaults() *CreateCheckoutLogRequest {
	this := CreateCheckoutLogRequest{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *CreateCheckoutLogRequest) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCheckoutLogRequest) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *CreateCheckoutLogRequest) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *CreateCheckoutLogRequest) SetKey(v string) {
	o.Key = &v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *CreateCheckoutLogRequest) GetProductName() string {
	if o == nil || o.ProductName == nil {
		var ret string
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCheckoutLogRequest) GetProductNameOk() (*string, bool) {
	if o == nil || o.ProductName == nil {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *CreateCheckoutLogRequest) HasProductName() bool {
	if o != nil && o.ProductName != nil {
		return true
	}

	return false
}

// SetProductName gets a reference to the given string and assigns it to the ProductName field.
func (o *CreateCheckoutLogRequest) SetProductName(v string) {
	o.ProductName = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *CreateCheckoutLogRequest) GetWebsite() string {
	if o == nil || o.Website == nil {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCheckoutLogRequest) GetWebsiteOk() (*string, bool) {
	if o == nil || o.Website == nil {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *CreateCheckoutLogRequest) HasWebsite() bool {
	if o != nil && o.Website != nil {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *CreateCheckoutLogRequest) SetWebsite(v string) {
	o.Website = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *CreateCheckoutLogRequest) GetSize() int64 {
	if o == nil || o.Size == nil {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCheckoutLogRequest) GetSizeOk() (*int64, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *CreateCheckoutLogRequest) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *CreateCheckoutLogRequest) SetSize(v int64) {
	o.Size = &v
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise.
func (o *CreateCheckoutLogRequest) GetImageUrl() string {
	if o == nil || o.ImageUrl == nil {
		var ret string
		return ret
	}
	return *o.ImageUrl
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCheckoutLogRequest) GetImageUrlOk() (*string, bool) {
	if o == nil || o.ImageUrl == nil {
		return nil, false
	}
	return o.ImageUrl, true
}

// HasImageUrl returns a boolean if a field has been set.
func (o *CreateCheckoutLogRequest) HasImageUrl() bool {
	if o != nil && o.ImageUrl != nil {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given string and assigns it to the ImageUrl field.
func (o *CreateCheckoutLogRequest) SetImageUrl(v string) {
	o.ImageUrl = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *CreateCheckoutLogRequest) GetPrice() float32 {
	if o == nil || o.Price == nil {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCheckoutLogRequest) GetPriceOk() (*float32, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *CreateCheckoutLogRequest) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *CreateCheckoutLogRequest) SetPrice(v float32) {
	o.Price = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CreateCheckoutLogRequest) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCheckoutLogRequest) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CreateCheckoutLogRequest) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CreateCheckoutLogRequest) SetStatus(v string) {
	o.Status = &v
}

func (o CreateCheckoutLogRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.ProductName != nil {
		toSerialize["product_name"] = o.ProductName
	}
	if o.Website != nil {
		toSerialize["website"] = o.Website
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.ImageUrl != nil {
		toSerialize["image_url"] = o.ImageUrl
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableCreateCheckoutLogRequest struct {
	value *CreateCheckoutLogRequest
	isSet bool
}

func (v NullableCreateCheckoutLogRequest) Get() *CreateCheckoutLogRequest {
	return v.value
}

func (v *NullableCreateCheckoutLogRequest) Set(val *CreateCheckoutLogRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCheckoutLogRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCheckoutLogRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCheckoutLogRequest(val *CreateCheckoutLogRequest) *NullableCreateCheckoutLogRequest {
	return &NullableCreateCheckoutLogRequest{value: val, isSet: true}
}

func (v NullableCreateCheckoutLogRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCheckoutLogRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


