/*
Whop API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.10
Contact: support@whop.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package whopclient

import (
	"encoding/json"
)

// LicenseDiscord struct for LicenseDiscord
type LicenseDiscord struct {
	Username NullableString `json:"username,omitempty"`
	DiscordAccountId NullableString `json:"discord_account_id,omitempty"`
	ImageUrl NullableString `json:"image_url,omitempty"`
}

// NewLicenseDiscord instantiates a new LicenseDiscord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLicenseDiscord() *LicenseDiscord {
	this := LicenseDiscord{}
	return &this
}

// NewLicenseDiscordWithDefaults instantiates a new LicenseDiscord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLicenseDiscordWithDefaults() *LicenseDiscord {
	this := LicenseDiscord{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseDiscord) GetUsername() string {
	if o == nil || o.Username.Get() == nil {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseDiscord) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *LicenseDiscord) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *LicenseDiscord) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *LicenseDiscord) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *LicenseDiscord) UnsetUsername() {
	o.Username.Unset()
}

// GetDiscordAccountId returns the DiscordAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseDiscord) GetDiscordAccountId() string {
	if o == nil || o.DiscordAccountId.Get() == nil {
		var ret string
		return ret
	}
	return *o.DiscordAccountId.Get()
}

// GetDiscordAccountIdOk returns a tuple with the DiscordAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseDiscord) GetDiscordAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DiscordAccountId.Get(), o.DiscordAccountId.IsSet()
}

// HasDiscordAccountId returns a boolean if a field has been set.
func (o *LicenseDiscord) HasDiscordAccountId() bool {
	if o != nil && o.DiscordAccountId.IsSet() {
		return true
	}

	return false
}

// SetDiscordAccountId gets a reference to the given NullableString and assigns it to the DiscordAccountId field.
func (o *LicenseDiscord) SetDiscordAccountId(v string) {
	o.DiscordAccountId.Set(&v)
}
// SetDiscordAccountIdNil sets the value for DiscordAccountId to be an explicit nil
func (o *LicenseDiscord) SetDiscordAccountIdNil() {
	o.DiscordAccountId.Set(nil)
}

// UnsetDiscordAccountId ensures that no value is present for DiscordAccountId, not even an explicit nil
func (o *LicenseDiscord) UnsetDiscordAccountId() {
	o.DiscordAccountId.Unset()
}

// GetImageUrl returns the ImageUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseDiscord) GetImageUrl() string {
	if o == nil || o.ImageUrl.Get() == nil {
		var ret string
		return ret
	}
	return *o.ImageUrl.Get()
}

// GetImageUrlOk returns a tuple with the ImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseDiscord) GetImageUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ImageUrl.Get(), o.ImageUrl.IsSet()
}

// HasImageUrl returns a boolean if a field has been set.
func (o *LicenseDiscord) HasImageUrl() bool {
	if o != nil && o.ImageUrl.IsSet() {
		return true
	}

	return false
}

// SetImageUrl gets a reference to the given NullableString and assigns it to the ImageUrl field.
func (o *LicenseDiscord) SetImageUrl(v string) {
	o.ImageUrl.Set(&v)
}
// SetImageUrlNil sets the value for ImageUrl to be an explicit nil
func (o *LicenseDiscord) SetImageUrlNil() {
	o.ImageUrl.Set(nil)
}

// UnsetImageUrl ensures that no value is present for ImageUrl, not even an explicit nil
func (o *LicenseDiscord) UnsetImageUrl() {
	o.ImageUrl.Unset()
}

func (o LicenseDiscord) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	if o.DiscordAccountId.IsSet() {
		toSerialize["discord_account_id"] = o.DiscordAccountId.Get()
	}
	if o.ImageUrl.IsSet() {
		toSerialize["image_url"] = o.ImageUrl.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableLicenseDiscord struct {
	value *LicenseDiscord
	isSet bool
}

func (v NullableLicenseDiscord) Get() *LicenseDiscord {
	return v.value
}

func (v *NullableLicenseDiscord) Set(val *LicenseDiscord) {
	v.value = val
	v.isSet = true
}

func (v NullableLicenseDiscord) IsSet() bool {
	return v.isSet
}

func (v *NullableLicenseDiscord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLicenseDiscord(val *LicenseDiscord) *NullableLicenseDiscord {
	return &NullableLicenseDiscord{value: val, isSet: true}
}

func (v NullableLicenseDiscord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLicenseDiscord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


