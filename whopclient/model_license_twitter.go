/*
Whop API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.10
Contact: support@whop.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package whopclient

import (
	"encoding/json"
)

// LicenseTwitter struct for LicenseTwitter
type LicenseTwitter struct {
	Username NullableString `json:"username,omitempty"`
	TwitterProfilePic NullableString `json:"twitter_profile_pic,omitempty"`
	Followers NullableInt64 `json:"followers,omitempty"`
	Following NullableInt64 `json:"following,omitempty"`
	TwitterAccountId NullableString `json:"twitter_account_id,omitempty"`
}

// NewLicenseTwitter instantiates a new LicenseTwitter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLicenseTwitter() *LicenseTwitter {
	this := LicenseTwitter{}
	return &this
}

// NewLicenseTwitterWithDefaults instantiates a new LicenseTwitter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLicenseTwitterWithDefaults() *LicenseTwitter {
	this := LicenseTwitter{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseTwitter) GetUsername() string {
	if o == nil || o.Username.Get() == nil {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseTwitter) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *LicenseTwitter) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *LicenseTwitter) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *LicenseTwitter) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *LicenseTwitter) UnsetUsername() {
	o.Username.Unset()
}

// GetTwitterProfilePic returns the TwitterProfilePic field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseTwitter) GetTwitterProfilePic() string {
	if o == nil || o.TwitterProfilePic.Get() == nil {
		var ret string
		return ret
	}
	return *o.TwitterProfilePic.Get()
}

// GetTwitterProfilePicOk returns a tuple with the TwitterProfilePic field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseTwitter) GetTwitterProfilePicOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TwitterProfilePic.Get(), o.TwitterProfilePic.IsSet()
}

// HasTwitterProfilePic returns a boolean if a field has been set.
func (o *LicenseTwitter) HasTwitterProfilePic() bool {
	if o != nil && o.TwitterProfilePic.IsSet() {
		return true
	}

	return false
}

// SetTwitterProfilePic gets a reference to the given NullableString and assigns it to the TwitterProfilePic field.
func (o *LicenseTwitter) SetTwitterProfilePic(v string) {
	o.TwitterProfilePic.Set(&v)
}
// SetTwitterProfilePicNil sets the value for TwitterProfilePic to be an explicit nil
func (o *LicenseTwitter) SetTwitterProfilePicNil() {
	o.TwitterProfilePic.Set(nil)
}

// UnsetTwitterProfilePic ensures that no value is present for TwitterProfilePic, not even an explicit nil
func (o *LicenseTwitter) UnsetTwitterProfilePic() {
	o.TwitterProfilePic.Unset()
}

// GetFollowers returns the Followers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseTwitter) GetFollowers() int64 {
	if o == nil || o.Followers.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Followers.Get()
}

// GetFollowersOk returns a tuple with the Followers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseTwitter) GetFollowersOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Followers.Get(), o.Followers.IsSet()
}

// HasFollowers returns a boolean if a field has been set.
func (o *LicenseTwitter) HasFollowers() bool {
	if o != nil && o.Followers.IsSet() {
		return true
	}

	return false
}

// SetFollowers gets a reference to the given NullableInt64 and assigns it to the Followers field.
func (o *LicenseTwitter) SetFollowers(v int64) {
	o.Followers.Set(&v)
}
// SetFollowersNil sets the value for Followers to be an explicit nil
func (o *LicenseTwitter) SetFollowersNil() {
	o.Followers.Set(nil)
}

// UnsetFollowers ensures that no value is present for Followers, not even an explicit nil
func (o *LicenseTwitter) UnsetFollowers() {
	o.Followers.Unset()
}

// GetFollowing returns the Following field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseTwitter) GetFollowing() int64 {
	if o == nil || o.Following.Get() == nil {
		var ret int64
		return ret
	}
	return *o.Following.Get()
}

// GetFollowingOk returns a tuple with the Following field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseTwitter) GetFollowingOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Following.Get(), o.Following.IsSet()
}

// HasFollowing returns a boolean if a field has been set.
func (o *LicenseTwitter) HasFollowing() bool {
	if o != nil && o.Following.IsSet() {
		return true
	}

	return false
}

// SetFollowing gets a reference to the given NullableInt64 and assigns it to the Following field.
func (o *LicenseTwitter) SetFollowing(v int64) {
	o.Following.Set(&v)
}
// SetFollowingNil sets the value for Following to be an explicit nil
func (o *LicenseTwitter) SetFollowingNil() {
	o.Following.Set(nil)
}

// UnsetFollowing ensures that no value is present for Following, not even an explicit nil
func (o *LicenseTwitter) UnsetFollowing() {
	o.Following.Unset()
}

// GetTwitterAccountId returns the TwitterAccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LicenseTwitter) GetTwitterAccountId() string {
	if o == nil || o.TwitterAccountId.Get() == nil {
		var ret string
		return ret
	}
	return *o.TwitterAccountId.Get()
}

// GetTwitterAccountIdOk returns a tuple with the TwitterAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LicenseTwitter) GetTwitterAccountIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.TwitterAccountId.Get(), o.TwitterAccountId.IsSet()
}

// HasTwitterAccountId returns a boolean if a field has been set.
func (o *LicenseTwitter) HasTwitterAccountId() bool {
	if o != nil && o.TwitterAccountId.IsSet() {
		return true
	}

	return false
}

// SetTwitterAccountId gets a reference to the given NullableString and assigns it to the TwitterAccountId field.
func (o *LicenseTwitter) SetTwitterAccountId(v string) {
	o.TwitterAccountId.Set(&v)
}
// SetTwitterAccountIdNil sets the value for TwitterAccountId to be an explicit nil
func (o *LicenseTwitter) SetTwitterAccountIdNil() {
	o.TwitterAccountId.Set(nil)
}

// UnsetTwitterAccountId ensures that no value is present for TwitterAccountId, not even an explicit nil
func (o *LicenseTwitter) UnsetTwitterAccountId() {
	o.TwitterAccountId.Unset()
}

func (o LicenseTwitter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	if o.TwitterProfilePic.IsSet() {
		toSerialize["twitter_profile_pic"] = o.TwitterProfilePic.Get()
	}
	if o.Followers.IsSet() {
		toSerialize["followers"] = o.Followers.Get()
	}
	if o.Following.IsSet() {
		toSerialize["following"] = o.Following.Get()
	}
	if o.TwitterAccountId.IsSet() {
		toSerialize["twitter_account_id"] = o.TwitterAccountId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableLicenseTwitter struct {
	value *LicenseTwitter
	isSet bool
}

func (v NullableLicenseTwitter) Get() *LicenseTwitter {
	return v.value
}

func (v *NullableLicenseTwitter) Set(val *LicenseTwitter) {
	v.value = val
	v.isSet = true
}

func (v NullableLicenseTwitter) IsSet() bool {
	return v.isSet
}

func (v *NullableLicenseTwitter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLicenseTwitter(val *LicenseTwitter) *NullableLicenseTwitter {
	return &NullableLicenseTwitter{value: val, isSet: true}
}

func (v NullableLicenseTwitter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLicenseTwitter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


