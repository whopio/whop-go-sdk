/*
Whop API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.10
Contact: support@whop.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package whopclient

import (
	"encoding/json"
)

// GetProductsResponse struct for GetProductsResponse
type GetProductsResponse struct {
	Products []Product `json:"products,omitempty"`
}

// NewGetProductsResponse instantiates a new GetProductsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProductsResponse() *GetProductsResponse {
	this := GetProductsResponse{}
	return &this
}

// NewGetProductsResponseWithDefaults instantiates a new GetProductsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProductsResponseWithDefaults() *GetProductsResponse {
	this := GetProductsResponse{}
	return &this
}

// GetProducts returns the Products field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetProductsResponse) GetProducts() []Product {
	if o == nil  {
		var ret []Product
		return ret
	}
	return o.Products
}

// GetProductsOk returns a tuple with the Products field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetProductsResponse) GetProductsOk() (*[]Product, bool) {
	if o == nil || o.Products == nil {
		return nil, false
	}
	return &o.Products, true
}

// HasProducts returns a boolean if a field has been set.
func (o *GetProductsResponse) HasProducts() bool {
	if o != nil && o.Products != nil {
		return true
	}

	return false
}

// SetProducts gets a reference to the given []Product and assigns it to the Products field.
func (o *GetProductsResponse) SetProducts(v []Product) {
	o.Products = v
}

func (o GetProductsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Products != nil {
		toSerialize["products"] = o.Products
	}
	return json.Marshal(toSerialize)
}

type NullableGetProductsResponse struct {
	value *GetProductsResponse
	isSet bool
}

func (v NullableGetProductsResponse) Get() *GetProductsResponse {
	return v.value
}

func (v *NullableGetProductsResponse) Set(val *GetProductsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProductsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProductsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProductsResponse(val *GetProductsResponse) *NullableGetProductsResponse {
	return &NullableGetProductsResponse{value: val, isSet: true}
}

func (v NullableGetProductsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProductsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


