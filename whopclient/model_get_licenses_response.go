/*
Whop API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.10
Contact: support@whop.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package whopclient

import (
	"encoding/json"
)

// GetLicensesResponse struct for GetLicensesResponse
type GetLicensesResponse struct {
	Users []License `json:"users,omitempty"`
}

// NewGetLicensesResponse instantiates a new GetLicensesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLicensesResponse() *GetLicensesResponse {
	this := GetLicensesResponse{}
	return &this
}

// NewGetLicensesResponseWithDefaults instantiates a new GetLicensesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLicensesResponseWithDefaults() *GetLicensesResponse {
	this := GetLicensesResponse{}
	return &this
}

// GetUsers returns the Users field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetLicensesResponse) GetUsers() []License {
	if o == nil  {
		var ret []License
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetLicensesResponse) GetUsersOk() (*[]License, bool) {
	if o == nil || o.Users == nil {
		return nil, false
	}
	return &o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *GetLicensesResponse) HasUsers() bool {
	if o != nil && o.Users != nil {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []License and assigns it to the Users field.
func (o *GetLicensesResponse) SetUsers(v []License) {
	o.Users = v
}

func (o GetLicensesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	return json.Marshal(toSerialize)
}

type NullableGetLicensesResponse struct {
	value *GetLicensesResponse
	isSet bool
}

func (v NullableGetLicensesResponse) Get() *GetLicensesResponse {
	return v.value
}

func (v *NullableGetLicensesResponse) Set(val *GetLicensesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLicensesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLicensesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLicensesResponse(val *GetLicensesResponse) *NullableGetLicensesResponse {
	return &NullableGetLicensesResponse{value: val, isSet: true}
}

func (v NullableGetLicensesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLicensesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


